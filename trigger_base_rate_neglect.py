from CybORG import CybORG
from CybORG.Agents import SleepAgent, FiniteStateRedAgent, EnterpriseGreenAgent
from CybORG.Agents.SimpleAgents.MyBlueAgent import MyBlueAgent
from CybORG.Agents.SimpleAgents.RandomAgent import cc4BlueRandomAgent
from CybORG.Simulator.Scenarios import EnterpriseScenarioGenerator
from CybORG.Simulator.Actions.AbstractActions import CrackPassword
import numpy as np
import matplotlib.pyplot as plt

steps = 500
df_sg = EnterpriseScenarioGenerator(blue_agent_class=MyBlueAgent,
                                    green_agent_class=EnterpriseGreenAgent,
                                    red_agent_class=FiniteStateRedAgent,
                                    steps=steps,
                                    # redParameters=aggressive_para,
                                    )

actions={}
for i in range(6):
    actions['red_agent_'+str(i)]=[]
filename = 'default_actions.txt'
cracking_log=[]
total_times=0
uncrack_rates=np.zeros(steps)


coefficients=[0.5,0.6,0.7,0.8,0.9,1]
n=10
m=len(coefficients)
sounding_files_cracked_times=np.zeros((m, steps))
len=n*m
with open(filename, 'w') as file:
    # Initialise environment
    for epoch in range(n):
        temp = np.zeros((m, steps))
        for coefficient_index in range(m):
            df_sg.sunk_reward=0
            df_sg.ava_reward=0
            df_sg.base_rate_penalty=coefficients[coefficient_index]
            cyborg = CybORG(scenario_generator=df_sg,seed=1234)
            for step in range(steps):
                cyborg.step()
                step_actions = cyborg.environment_controller.action
                for k in range(6):
                    agent_name='red_agent_'+str(k)
                    action=step_actions[agent_name][0]
                    agent=cyborg.environment_controller.agent_interfaces[agent_name].agent
                    temp[coefficient_index][step] = max(temp[coefficient_index][step], temp[coefficient_index][step - 1])
                    if action.name=="Sleep":
                        continue
                    if isinstance(action,CrackPassword):
                        # cracking_log.append({'step':step,'agent':i,'reward':action.ac_reward,
                        #                      'uncrackable':'uncrackable' in action.file.name})
                        total_times+=1
                        if 'valuable' in action.file.name:
                            temp[coefficient_index][step]+=1
        for i in range(m):
            for j in range(steps):
                sounding_files_cracked_times[i][j]+=temp[i][j]

    for i in range(m):
        for j in range(steps):
            sounding_files_cracked_times[i][j] /= n
        plt.plot(sounding_files_cracked_times[i], label='c_b =' + str(coefficients[0]))
    plt.legend()
    plt.xlabel('step')
    plt.ylabel('sounding files cracked times')
    plt.show()
