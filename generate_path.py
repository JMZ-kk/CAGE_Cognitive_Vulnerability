from pprint import pprint
from CybORG import CybORG
from CybORG.Simulator.Scenarios import EnterpriseScenarioGenerator
from CybORG.Agents import SleepAgent, FiniteStateRedAgent, RandomSelectRedAgent,KeyboardAgent
from CybORG.Agents.SimpleAgents.KeyboardRedAgent import KeyboardRedAgent
from trigger import *
# Initialise environment
default_para = []
with open('default_para.txt', 'r') as file:
    lines = file.readlines()[3:]
    for line in lines:
        line = line.strip()
        if line:
            param_values = [float(value) for value in line.split(',')]
            default_para.append(tuple(param_values))

steps = 500
sg = EnterpriseScenarioGenerator(blue_agent_class=SleepAgent,
                                green_agent_class=SleepAgent,
                                red_agent_class=FiniteStateRedAgent,
                                steps=steps,
                                # redParameters=aggressive_para,
                                # trigger=activeTrigger
                                # trigger_parameters=aggressiveTriggerParameters
                                )
cyborg = CybORG(scenario_generator=sg, seed=1234)
filename = 'trigger_para sample action.txt'
hostname_ip_map={}

with open(filename, 'w') as file:
    for i in range(steps):
        cyborg.step()
        step_actions = cyborg.environment_controller.action
        action=step_actions['red_agent_0'][0]
        # print(action)
        host_states=cyborg.environment_controller.agent_interfaces['red_agent_0'].agent.host_states
        for ip in host_states.keys():
            file.write('State,'+ip+','+host_states[ip]['state'] + '\n')
            if host_states[ip]['hostname'] is not None and host_states[ip]['hostname'] not in hostname_ip_map:
                hostname_ip_map[host_states[ip]['hostname']]=ip

        line = 'Action,'+action.name
        if action.name=='DiscoverRemoteSystems':
            line+=' '+action.subnet.with_prefixlen
        elif action.name=='Sleep':
            pass
        elif hasattr(action,'ip_address'):
            line+=' '+action.ip_address.compressed
        else:
            line += ' ' + hostname_ip_map[action.hostname]
        file.write(line + '\n')