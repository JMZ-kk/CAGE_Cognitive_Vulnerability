from CybORG.Shared import Observation
from CybORG.Simulator.Actions import Action
from CybORG.Simulator.Actions.ConcreteActions.StopService import StopService
from CybORG.Simulator.State import State
from CybORG.Simulator.File import File
import random


class CrackPassword(Action):
    def __init__(self, hostname: str,filename:str,password=0):
        super().__init__()
        self.hostname = hostname
        if password==0:
            self.duration = 3#bruteforce
        else:
            self.duration = 1
        self.filename=filename
        self.file=None
        self.pswd = password

    def execute(self, state: State) -> Observation:
        host = state.hosts[self.hostname]
        for file in host.files:
            if file.name==self.filename:
                self.file=file
                break
        if self.pswd==0:
            hardness=1
        elif self.pswd==self.file.message['password']:
            hardness=0
        else:
            hardness=self.file.hard+0.1
        if self.file==None:
            print('bug')
            return Observation(success=False)
        elif random.random()>hardness:
            obs = Observation(success=True)
            self.ac_reward=self.file.true_value
            self.file.value=0
            self.file.true_value = 0
        else:
            obs = Observation(success=False)
        self.file.crack_times += 1
        for file in host.files:
            obs.add_file_info(hostid=self.hostname, name=file.name,path=file.path,
                              density=file.density,value=file.value)
        return obs

    def __str__(self):
        return f"{self.__class__.__name__} {self.hostname}"

    def __eq__(self, other):
        if not isinstance(other, self.__class__):
            return False
        return all((
            self.name == other.name,
            self.hostname == other.hostname,
            self.agent == other.agent,
            self.session == other.session,
        ))
