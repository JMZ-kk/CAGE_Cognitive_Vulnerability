import os
from collections import defaultdict
import pickle
from collections import defaultdict
import numpy as np

from CybORG import CybORG
from CybORG.Agents import EnterpriseGreenAgent
from CybORG.Agents.SimpleAgents.FiniteStateRedAgent_sunk import FiniteStateRedAgent, InformationDiscover
from CybORG.Agents.SimpleAgents.MyBlueAgent import MyBlueAgent
from CybORG.Simulator.Actions.AbstractActions import CrackPassword
from CybORG.Simulator.Scenarios import EnterpriseScenarioGenerator

def readfile(filepath):
    label=[]
    parameters=[]
    with open(filepath, 'r') as file:
        lines = file.readlines()

    action_frequency = {
        'DiscoverRemoteSystems': 0,
        'AggressiveServiceDiscovery': 0,
        'StealthServiceDiscovery': 0,
        'DiscoverDeception': 0,
        'ExploitRemoteService': 0,
        'PrivilegeEscalate': 0,
        'InformationDiscover': 0,
        'CrackPassword': 0,
        'CheckCredFile':0
    }

    crack_password_targets = defaultdict(int)
    idx = 0
    con = 0
    dis = 0
    for line in lines:
        if idx<3:
            parts = line.strip().split()
            label.append(parts[1])
        elif idx==3:
            parts = line.strip().split(',')
            parameters=[float(part) for part in parts]
        elif idx>4:
            parts = line.strip().split()
            agent_name = parts[0]
            action = parts[1]
            target = parts[2]
            action_frequency[action] += 1
            if action == 'CrackPassword':
                crack_password_targets[target] += 1
            elif action == 'CheckCredFile':
                if target=='Confirmation':
                    con+=1
                else:
                    dis+=1
        idx+=1
    max_crack_attempt=max(crack_password_targets.values())
    X=[]
    ag = action_frequency['AggressiveServiceDiscovery']
    st = action_frequency['StealthServiceDiscovery']
    X.append(ag / (ag + st))
    if con + dis == 0:
        X.append(0.5)
    else:
        X.append(con / (con + dis))
    X.append(max_crack_attempt)
    return label, parameters, X

def create_env(parameters,steps=500):
    sg = EnterpriseScenarioGenerator(blue_agent_class=MyBlueAgent,
                                     green_agent_class=EnterpriseGreenAgent,
                                     red_agent_class=FiniteStateRedAgent,
                                     steps=steps,
                                     redParameters=parameters
                                     )
    cyborg = CybORG(scenario_generator=sg)
    return cyborg

def simulation(name,cyborg, output_path,contents=None, steps=500):
    filename=output_path+name
    hostname_ip_map = {}
    if not os.path.exists(filename):
        with open(filename, 'w') as file:
            if contents is not None:
                file.write(contents[name] + '\n')
            for i in range(steps):
                cyborg.step()
                step_actions = cyborg.environment_controller.action
                for agent in step_actions.keys():
                    if 'red' in agent:
                        action = step_actions[agent][0]
                        host_states = cyborg.environment_controller.agent_interfaces[agent].agent.host_states
                        for ip in host_states.keys():
                            # file.write('State,'+ip+','+host_states[ip]['state'] + '\n')
                            if host_states[ip]['hostname'] is not None and host_states[ip][
                                'hostname'] not in hostname_ip_map:
                                hostname_ip_map[host_states[ip]['hostname']] = ip
                        if action.name == 'Sleep':
                            continue
                        if isinstance(action, InformationDiscover) and '0' in agent:
                            continue

                        line = agent + ' ' + action.name
                        if action.name == 'DiscoverRemoteSystems':
                            line += ' ' + action.subnet.with_prefixlen
                        elif action.name == 'Sleep':
                            pass
                        elif action.name=='CheckCredFile':
                            if action.confirm:
                                line += ' Confirmation'
                            else:
                                line += ' Disconfirmation'
                        elif isinstance(action, CrackPassword):
                            line += ' ' + action.filename
                        elif hasattr(action, 'ip_address'):
                            line += ' ' + action.ip_address.compressed
                        else:
                            line += ' ' + hostname_ip_map[action.hostname]
                        file.write(line + '\n')