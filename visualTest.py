import networkx as nx
import matplotlib.pyplot as plt
import os

num=0
pos=None
def drawStepGraph(host_states,step,last_action,action,directory):
    global num,pos
    G = nx.Graph()
    nodelists={
        'K': [],
        'KD': [],
        'S': [],
        'SD': [],
        'U': [],
        'UD': [],
        'R': [],
        'RD': [],
        'F':[]
    }
    node_color_map = {
        'K': '#90EE90',
        'KD': 'green',
        'S': '#ADD8E6',
        'SD': 'blue',
        'U': 'yellow',
        'UD': 'orange',
        'R': '#FFC0CB',
        'RD': '#8B0000',
        'F':'purple'
    }
    for ip, state in host_states.items():
        G.add_node(ip, state=state)
        nodelists[state].append(ip)

    if len(G.nodes) != num:
        num=len(G.nodes)
        pos = nx.spring_layout(G,k=0.01)

    nx.draw_networkx(G, pos,node_color=node_color_map['K'],
                     nodelist=nodelists['K'], verticalalignment='bottom',with_labels=True, font_size=8, node_size=200)
    nx.draw_networkx(G, pos,node_color=node_color_map['KD'],
                     nodelist=nodelists['KD'], verticalalignment='bottom',with_labels=True, font_size=8, node_size=200)
    nx.draw_networkx(G, pos,node_color=node_color_map['S'],
                     nodelist=nodelists['S'], verticalalignment='bottom',with_labels=True, font_size=8, node_size=200)
    nx.draw_networkx(G, pos,node_color=node_color_map['SD'],
                     nodelist=nodelists['SD'], verticalalignment='bottom',with_labels=True, font_size=8, node_size=200)
    nx.draw_networkx(G, pos,node_color=node_color_map['U'],
                     nodelist=nodelists['U'], verticalalignment='bottom',with_labels=True, font_size=8, node_size=200)
    nx.draw_networkx(G, pos,node_color=node_color_map['UD'],
                     nodelist=nodelists['UD'], verticalalignment='bottom',with_labels=True, font_size=8, node_size=200)
    nx.draw_networkx(G, pos,node_color=node_color_map['R'],
                     nodelist=nodelists['R'], verticalalignment='bottom',with_labels=True, font_size=8, node_size=200)
    nx.draw_networkx(G, pos,node_color=node_color_map['RD'],
                     nodelist=nodelists['RD'], verticalalignment='bottom',with_labels=True, font_size=8, node_size=200)

    node_labels = nx.get_node_attributes(G, 'label')
    nx.draw_networkx_labels(G, pos, labels=node_labels, verticalalignment='bottom')
    legends=[]
    for state,nodes in nodelists.items():
        if len(nodes)>0:
            legends.append(state)

    plt.legend(legends)
    plt.title('last action: '+last_action+'\nnext action: '+action)
    plt.savefig(directory+'\\step '+str(step)+'.png')
    plt.clf()

with open('trigger sample action.txt') as f:
    lines = f.readlines()

step=0
cur_action='Initialization'
host_states={}
directory='graphs_active'
os.makedirs(directory)
for line in lines:
    temp=line[:-1].split(',')
    if temp[0]=='Action':
        drawStepGraph(host_states,step,cur_action,temp[1],directory)
        cur_action = temp[1]
        host_states.clear()
        step+=1
    else:
        host_states[temp[1]]=temp[2]